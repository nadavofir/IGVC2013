/*
 * unit_test.cpp
 *
 *  Created on: Mar 10, 2011
 *      Author: Nicu Stiurca
 */

#include <gtest/gtest.h>

#include "ocean_server_imu/ocean_server_5000.hpp"

using namespace std;

TEST(TestSuite, testComputeCkSum)
{
	EXPECT_EQ(0x7C, computeChecksum("$C191.4P1.3R-178.6T20.1D-212797.5424M171.38Mx46.86My18.49Mz-163.81A1.018Ax0.022Ay-0.023Az-1.017G-0.01Gx-0.01Gy0.00L539823*7C"));
	EXPECT_EQ(0x7F, computeChecksum("$C126.9P6.4R-117.3T17.5D-212797.5424M180.58Mx94.59My78.57Mz-132.24A1.004Ax0.114Ay-0.892Az-0.447G-0.01Gx-0.01Gy0.00L550224*7F"));
	EXPECT_EQ(0x45, computeChecksum("$C167.4P11.1R-157.9T17.5D-212797.5424M154.00Mx74.68My46.41Mz-126.43A0.789Ax0.152Ay-0.295Az-0.716G-0.01Gx-0.01Gy0.00L550071*45"));
	EXPECT_EQ(0x5F, computeChecksum("$C78.7P7.2R154.0T18.2D-212797.5424M47.41Mx-6.17My-22.39Mz41.33A0.990Ax0.125Ay0.433Az-0.881G-0.01Gx-0.01Gy0.00L553271*5F"));
	EXPECT_EQ(0x6A, computeChecksum("$C69.2P0.4R154.0T18.3D-212797.5424M92.41Mx-18.45My-47.07Mz77.35A1.018Ax0.007Ay0.446Az-0.915G-0.01Gx-0.01Gy0.00L553295*6A"));
}

TEST(TestSuite, testIsValid)
{
	EXPECT_TRUE(isValid("$C191.4P1.3R-178.6T20.1D-212797.5424M171.38Mx46.86My18.49Mz-163.81A1.018Ax0.022Ay-0.023Az-1.017G-0.01Gx-0.01Gy0.00L539823*7C"));
	EXPECT_TRUE(isValid("$C126.9P6.4R-117.3T17.5D-212797.5424M180.58Mx94.59My78.57Mz-132.24A1.004Ax0.114Ay-0.892Az-0.447G-0.01Gx-0.01Gy0.00L550224*7F"));
	EXPECT_TRUE(isValid("$C167.4P11.1R-157.9T17.5D-212797.5424M154.00Mx74.68My46.41Mz-126.43A0.789Ax0.152Ay-0.295Az-0.716G-0.01Gx-0.01Gy0.00L550071*45"));
	EXPECT_TRUE(isValid("$C78.7P7.2R154.0T18.2D-212797.5424M47.41Mx-6.17My-22.39Mz41.33A0.990Ax0.125Ay0.433Az-0.881G-0.01Gx-0.01Gy0.00L553271*5F"));
	EXPECT_TRUE(isValid("$C69.2P0.4R154.0T18.3D-212797.5424M92.41Mx-18.45My-47.07Mz77.35A1.018Ax0.007Ay0.446Az-0.915G-0.01Gx-0.01Gy0.00L553295*6A"));

	// must start with $
	EXPECT_FALSE(isValid("C69.2P0.4R154.0T18.3D-212797.5424M92.41Mx-18.45My-47.07Mz77.35A1.018Ax0.007Ay0.446Az-0.915G-0.01Gx-0.01Gy0.00L553295*6A"));
	EXPECT_FALSE(isValid("a$C69.2P0.4R154.0T18.3D-212797.5424M92.41Mx-18.45My-47.07Mz77.35A1.018Ax0.007Ay0.446Az-0.915G-0.01Gx-0.01Gy0.00L553295*6A"));

	EXPECT_FALSE(isValid("$C191.4P1.3R-178.6T20.1D-24797.5424M171.38Mx46.86My18.49Mz-163.81A1.018Ax0.022Ay-0.023Az-1.017G-0.01Gx-0.01Gy0.00L539823*7C"));
	EXPECT_FALSE(isValid("$C126.9P6.4R-117.3T17.5D-212s97.5424M180.58Mx94.59My78.57Mz-132.24A1.004Ax0.114Ay-0.892Az-0.447G-0.01Gx-0.01Gy0.00L550224*7F"));
	EXPECT_FALSE(isValid("$C167.4P11.1R-157.9T17.5D-212s7.5424M154.00Mx74.68My46.41Mz-126.43A0.789Ax0.152Ay-0.295Az-0.716G-0.01Gx-0.01Gy0.00L550071*45"));
	EXPECT_FALSE(isValid("$C78.7P7.2R154.0T1s.2D-212797.5424M47.41Mx-6.17Ms-22.39Mz41.33A0.990Ax0.125Ay0.433Az-0.881G-0.01Gx-0.01Gy0.00L553271*5F"));
	EXPECT_FALSE(isValid("$C69.2P0.4R1s.0T18.3D-212797.542sM92.41Mx-18.45My-47.07Mz77.35A1.018Ax0.007Ay0.446Az-0.915G-0.01Gx-0.01Gy0.00L553295*6A"));
}

TEST(TestSuite, testParseOSData)
{
	ocean_server_imu::RawData msg;
	bool success = parseOSData("$C191.4P1.3R-178.6T20.1D-212797.5424M171.38Mx46.86My18.49Mz-163.81A1.018Ax0.022Ay-0.023Az-1.017G-0.01Gx-0.01Gy0.00L539823*7C", msg);
	EXPECT_TRUE(success);
	EXPECT_DOUBLE_EQ(dtor(-(191.4-90.0)), msg.yaw);
	EXPECT_DOUBLE_EQ(dtor(1.3), msg.pitch);
	EXPECT_DOUBLE_EQ(dtor(-178.6), msg.roll);
	EXPECT_DOUBLE_EQ(20.1, msg.temperature);
	EXPECT_DOUBLE_EQ(ft2m(-212797.5424), msg.depth);
	EXPECT_DOUBLE_EQ(171.38, msg.magnetic_vector_length);
	EXPECT_DOUBLE_EQ(46.86, msg.magnetic.x);
	EXPECT_DOUBLE_EQ(18.49, msg.magnetic.y);
	EXPECT_DOUBLE_EQ(-163.81, msg.magnetic.z);
	EXPECT_DOUBLE_EQ(gForceToAccel(1.018), msg.acceleration_vector_length);
	EXPECT_DOUBLE_EQ(gForceToAccel(0.022), msg.acceleration.x);
	EXPECT_DOUBLE_EQ(gForceToAccel(-0.023), msg.acceleration.y);
	EXPECT_DOUBLE_EQ(gForceToAccel(-1.017), msg.acceleration.z);
	EXPECT_DOUBLE_EQ(-0.01, msg.gyroscope_vector_length);
	EXPECT_DOUBLE_EQ(-0.01, msg.gyroscope.x);
	EXPECT_DOUBLE_EQ(0.00, msg.gyroscope.y);
	EXPECT_EQ(539823, msg.header.seq);
}

TEST(TestSuite, testHeadingToYaw)
{
	EXPECT_DOUBLE_EQ(dtor(90.0), headingToYaw(0.0));
	EXPECT_DOUBLE_EQ(dtor(0.0), headingToYaw(90.0));
	EXPECT_DOUBLE_EQ(dtor(-90.0), headingToYaw(180.0));
	EXPECT_DOUBLE_EQ(dtor(-179.9), headingToYaw(269.9));
	EXPECT_DOUBLE_EQ(dtor(180.0), headingToYaw(270.0));
	EXPECT_DOUBLE_EQ(dtor(179.9), headingToYaw(270.1));
	EXPECT_DOUBLE_EQ(dtor(90.1), headingToYaw(359.9));

	EXPECT_DOUBLE_EQ(dtor(45.0), headingToYaw(45.0));
	EXPECT_DOUBLE_EQ(dtor(-45.0), headingToYaw(135.0));
	EXPECT_DOUBLE_EQ(dtor(-135.0), headingToYaw(225.0));
	EXPECT_DOUBLE_EQ(dtor(135.0), headingToYaw(315.0));
}



// Run all the tests that were declared with TEST()
int main(int argc, char **argv) 
{
	testing::InitGoogleTest(&argc, argv);
	return RUN_ALL_TESTS();
}
